#!/usr/bin/env python

from xml.parsers.expat import ParserCreate
from subprocess import Popen,PIPE,STDOUT
from shutil import rmtree
from os import remove, path
import sys

class SubversionCleaner(object):
    def __init__(self, force=False):
        self.currentPath = ""
        self.force = force

    def StartTag(self, name, attrs):
        if name == 'entry':
            self.current_path = attrs['path']
        elif name == 'wc-status':
            if attrs['item'] == 'ignored' or attrs['item'] == 'unversioned':

                if self.force:
                    prefix_string = 'removing: '
                else:
                    prefix_string = 'would remove: '
                print prefix_string + self.current_path

                if self.force:
                    if path.isfile(self.current_path) or path.islink(self.current_path):
                        remove(self.current_path)
                    elif path.isdir(self.current_path):
                        rmtree(self.current_path)

    def Clean(self):
        pstatus = Popen('svn status --no-ignore --xml', shell=True, stdout=PIPE, stderr=STDOUT)

        xmlparser = ParserCreate()
        xmlparser.StartElementHandler = self.StartTag
        xmlparser.ParseFile(pstatus.stdout)

        retval = pstatus.wait()

force = False

# no argparse on < 2.7, so do it manually
if len(sys.argv) == 2:
    if sys.argv[1] in ['-f', '--force']:
        force = True
    if sys.argv[1] in ['-h', '--help']:
        print "svn clean [-f|--force] [-h|--help]";
        sys.exit(-1);

sp = SubversionCleaner(force=force)
sp.Clean()
